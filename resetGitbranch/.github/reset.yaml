name: common-qa-workflow

on:
  workflow_dispatch:
  push:
    branches: 
      - proof-v10-qa-*
    paths:
      - api/**/**
      - '!api/k8s/**'
      - assessment/**/**
      - '!assessment/k8s/**'
      - data-processing/**/**
      - '!data-processing/k8s/**'
      - framework/**/**
      - '!framework/k8s/**'
      - messaging/**/**
      - '!messaging/k8s/**'
      - storage/**/**
      - '!storage/k8s/**'
      - user-auth-permission/**/**
      - '!user-auth-permission/k8s/**'
      - visualization/**/**
      - '!visualization/k8s/**'
      - workers/**/**
      - '!workers/assessment-due/k8s/**'
      - '!workers/metric-aggregate/k8s/**'
      - '!workers/metric-calculate/k8s/**' 
    tags:
      - reset-qa-*

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  issues: write
  packages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write
  id-token: write

jobs:
  services_list:
    runs-on: [self-hosted,staging]
    outputs:
      matrix:  ${{steps.createarray.outputs.matrix}}
    steps:
      - name: Checkout for Push
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        uses: actions/checkout@v2
        with:
           fetch-depth: 0 
           ref: ${{ github.event.pull_request.head.ref }}

      - name: Checkout for Tag
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: actions/checkout@v2
        with:
           fetch-depth: 0

      - name: Create Files Array
        id: createarray
        run: |-
          event=$(echo "$GITHUB_REF" | cut -d'/' -f 2)
          if [ "${event}" = "heads" ]; then
            echo "${{ github.event.pull_request.head.ref }}"
            SERVICES=`git diff-tree --no-commit-id --name-only -r HEAD HEAD^^ | awk -F/ '{ print $1}' | uniq | sed -n -e '/api/p' -e '/assessment/p'  -e '/data-processing/p' -e '/framework/p' -e '/messaging/p' -e '/storage/p' -e '/user-auth-permission/p' -e '/visualization/p'` 
            WORKER=`git diff-tree --no-commit-id --name-only -r HEAD HEAD^^ | awk -F/ '{ print $1"/"$2}' | uniq | sed -n -e '/worker/p'`
            svcArray=(`echo ${SERVICES} ${WORKER} `)
            sudo apt-get update && sudo apt-get install jo
            echo "matrix=$(jo -a "${svcArray[@]}" )" >> $GITHUB_OUTPUT
          else
            COMMIT_BRANCH=`git log --oneline --merges | grep  "Merge pull " | sed -n 's/.*\/\([^ ]*\)\( .*\)\{0,1\}/\1/p' | awk 'NR==1 {print}'`
            git fetch origin main && git checkout main && git fetch origin $COMMIT_BRANCH && git checkout $COMMIT_BRANCH
            SERVICES=`git diff --name-only --no-commit-id main..$COMMIT_BRANCH | awk -F/ '{ print $1}' | uniq | sed -n -e '/api/p' -e '/assessment/p'  -e '/data-processing/p' -e '/framework/p' -e '/messaging/p' -e '/storage/p' -e '/user-auth-permission/p' -e '/visualization/p'` 
            WORKER=`git diff-tree --no-commit-id --name-only -r HEAD HEAD^^ | awk -F/ '{ print $1"/"$2}' | uniq | sed -n -e '/worker/p'`
            svcArray=(`echo ${SERVICES} ${WORKER} `)
            sudo apt-get update && sudo apt-get install jo
            echo "matrix=$(jo -a "${svcArray[@]}" )" >> $GITHUB_OUTPUT
          fi

  build-push-gcr:
    needs: services_list
    runs-on: [self-hosted,staging]
    strategy:
      matrix:
        target: ${{ fromJSON(needs.services_list.outputs.matrix) }}
    steps:
    - name: Checkout on Tag
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: main

    - name: Checkout on Push
      if: ${{ startsWith(github.ref, 'refs/heads/') }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.QA_SERVICE_ACCOUNT_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Set up Docker Context for Buildx
      id: buildx-context
      run: |
        docker context create builders

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
        endpoint: builders

    - name: Extract tag location
      run: |-
        export SVC_VARIABLE=`echo ${{ matrix.target }}`
        SVCS=$(basename $SVC_VARIABLE)
        echo "workersvc=$SVCS" >> "$GITHUB_ENV"

    - name: Build and Push
      uses: docker/build-push-action@v4
      with:
        context: ./${{ matrix.target }}
        file: ./${{ matrix.target }}/Dockerfile
        push: true
        tags: |
          us-central1-docker.pkg.dev/nonprod-350513/${{ env.workersvc }}-qa/${{ env.workersvc }}:${{ github.sha }}

    - name: Grep ENV
      run: |-
        event=$(echo "$GITHUB_REF" | cut -d'/' -f 2)
        if [ "${event}" = "heads" ]; then
          export ENVIRONMENT=`echo $GITHUB_REF | awk -F"refs/heads/proof-v10-" '{print $2}'`
          echo "ns=$ENVIRONMENT" >> "$GITHUB_ENV"     
        else
          export ENVIRONMENT=`echo $GITHUB_REF | sed 's/^refs\/tags\///' | cut -d'-' -f2-3`
          echo "ns=$ENVIRONMENT" >> "$GITHUB_ENV"
        fi

    - name: Update Config
      run: |-
        event=$(echo "$GITHUB_REF" | cut -d'/' -f 2)
        if [ "${event}" = "heads" ]; then
          git config --local user.email ""noreplay@github.com""
          git config --local user.name "githubCI"
          git pull origin proof-v10-${{ env.ns }}
        else
          git config --local user.email ""noreplay@github.com""
          git config --local user.name "githubCI"
          git pull origin main 
        fi

    - name: Update values.yaml
      run: |-
        export TAG=$(cat ./${{ matrix.target }}/k8s/${{ env.ns }}/values.yaml | awk 'p>1; /:/{++p}' | awk -F: '{if(NR==2) {print $3}}')
        sed -i "s/${TAG}/${GITHUB_SHA}/g" ./${{ matrix.target }}/k8s/${{ env.ns }}/values.yaml

    - name: Commit Files
      run: |-
        git add ./${{ matrix.target }}/k8s/${{ env.ns }}/values.yaml
        git commit -m "Add changes"

    - name: Push Changes
      uses: ad-m/github-push-action@master
      with:
        force: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: proof-v10-${{ env.ns }}
